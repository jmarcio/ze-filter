#!/bin/sh
#
# ze-filter 2.4.0
#
# chkconfig: 2345 80 30
# description: ze-filter - Joe's ze-filter
#		filtre de messagerie

### BEGIN INIT INFO
# Provides:                     ze-filter
# Required-Start:               $remote_fs
# Required-Stop:
# X-UnitedLinux-Should-Start:
# X-UnitedLinux-Should-Stop:
# Default-Start:                3 5
# Default-Stop:
# Description:                  Start ze-filter (milter)
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

# Source networking configuration.
[ -f /etc/sysconfig/network ] && . /etc/sysconfig/network


#
# VARIABLES
#
ZEFILTER_HOME=/usr/local/sbin

ZEFILTER_BIN=ze-filter

OPTIONS=" "

WORKROOT=/var/ze-filter
STATEDIR=/var/run/ze-filter
CONFDIR=/etc/mail/ze-filter


# Get config.

test -f /etc/sysconfig/ze-filter && . /etc/sysconfig/ze-filter

test -f /etc/default/ze-filter   && . /etc/default/ze-filter


PIDFILE=$STATEDIR/ze-filter.pid
SOCKFILE=$STATEDIR/ze-filter.sock
CFFILE=$CONFDIR/ze-filter.cf

#
# Get unix socket file from configuration file
#
TFILE=`grep "^SOCKET" $CFFILE | awk '{print $2}'`
if [ -n "$TFILE" ];
then
  TFILE=`echo $TFILE | sed s/local://`
  TFILE=`echo $TFILE | sed s/unix://`
fi

if [ -n "$TFILE" ] ;
then
  SOCKFILE=$TFILE
fi

#
# Get PIDFILE file from configuration file
#
TFILE=`grep "^PID_FILE" $CFFILE | awk '{print $2}'`
if [ -n "$TFILE" ] ;
then
  PIDFILE=$TFILE
fi

#
#
#
USR_ID=smmsp
GRP_ID=smmsp

#
# Initializing process runtime state files
#
TPID=`grep "^PID_FILE" $CFFILE | awk '{print $2}'`
if [ -n "$TPID" ] ;
then
  # echo "Setting PIDFILE to $TPID"
  PIDFILE=$TPID
fi

TSOCK=`grep "^UNIX_SOCK" $CFFILE | awk '{print $2}'`
if [ -n "$TSOCK" ] ;
then
  # echo "Setting UNIX_SOCK to $TSOCK"
  SOCKFILE=$TSOCK
fi

#
# MACROS
#

check_and_kill()
{
  PID=`head -1 $1`
  kill -0 $PID > /dev/null 2>&1
  [ $? -eq 0 ] && kill $PID
}

setupdirs ()
{
  if [ -n "$WORKROOT" -a ! -d $WORKROOT ] ; then
    mkdir -p $WORKROOT
    chmod 755 $WORKROOT
    if [ -n "$USR_ID" ] ; then
      chown $USR_ID $WORKROOT
    fi
    if [ -n "$GRP_ID" ] ; then
      chgrp $GRP_ID $WORKROOT
    fi
  fi

  if [ -n "$STATEDIR" -a ! -d $STATEDIR ] ; then
    mkdir -p $STATEDIR
    chmod 755 $STATEDIR
    if [ -n "$USR_ID" ] ; then
      chown $USR_ID $STATEDIR
    fi
    if [ -n "$GRP_ID" ] ; then
      chgrp $GRP_ID $STATEDIR
    fi
  fi
}

cleanpidfile ()
{
  run=`/bin/ps -edf | grep $ZEFILTER_BIN  | grep -c -v grep`
  if [ "$run" = "0" ] ; then
    if [ -f $PIDFILE ] ; then
      echo "Removing old PID file..."
      rm -f $PIDFILE
    fi
  fi
}

cleansockfile ()
{
  run=`/bin/ps -edf | grep $ZEFILTER_BIN  | grep -c -v grep`
  if [ "$run" = "0" ] ; then
    if [ -r $SOCKFILE ] ; then
      echo "Removing old SOCK file..."
      rm -f $SOCKFILE
    fi
  fi
}

removesockfile ()
{
  if [ -r $SOCKFILE ] ; then
    echo "Removing old SOCK file..."
    rm -f $SOCKFILE
  fi
}

start ()
{
  cleanpidfile
  cleansockfile

  if [ -f $ZEFILTER_HOME/$ZEFILTER_BIN ] ; then
    daemon "$ZEFILTER_HOME/$ZEFILTER_BIN $OPTIONS > /dev/null"
  fi
}

stop () {
  i=10
  while [ $i -gt 0 -a -f $PIDFILE ]; do
    killproc -p $PIDFILE
    i=`expr $i - 1`
    sleep 1
  done
  echo
  cleanpidfile
  cleansockfile
}

restart () 
{
  stop
  sleep 2
  start
}

reload ()
{
  if [ -f  "$PIDFILE" ]; then
    kill -HUP `head -1 $PIDFILE`
  fi
  removesockfile
}

dumpstats ()
{
  if [ -f  "$PIDFILE" ]; then
    kill -USR1 `head -1 $PIDFILE`
  fi
}

clearstats ()
{
  if [ -f  "$PIDFILE" ]; then
    kill -USR2 `head -1 $PIDFILE`
  fi
}

#
# Real script begins here
#
setupdirs

case "$1" in
start)
	start
	;;

stop)
	stop
	;;

restart)
	stop
	sleep 2
	start
	restart
	;;
status)
        status ze-filter
        RETVAL=$?
        ;;
reload)
  reload
  ;;

dumpstats)
  dumpstats
  ;;

clearstats)
  clearstats
  ;;
*)
	echo "Usage: $0 { start | stop | restart | reload | dumpstats | clearstats }"
        cat <<EOF
start      - start ze-filter
stop       - stop ze-filter
restart    - stop and start ze-filter
reload     - reload ze-filter configuration files 
             (send SIGHUP to the daemon)
dumpstats  - dump internal counters
             (send SUGUSR1 to the daemon)
clearstats - reset internal counters
             (send SIGUSR2 to the daemon)
help       - this screen

EOF
	exit 1
	;;
esac

exit 0

